#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];
#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}
    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(sym#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}bolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}#include <windows.h>
#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "RUS");
    char inputFileName[MAX_PATH], outputFileName[MAX_PATH];
    char symbolToDelete[16];

    printf("Enter the name of the source file: ");
    fgets(inputFileName, sizeof(inputFileName), stdin);
    inputFileName[strcspn(inputFileName, "\n")] = 0;

    printf("Enter the name of the target file: ");
    fgets(outputFileName, sizeof(outputFileName), stdin);
    outputFileName[strcspn(outputFileName, "\n")] = 0;

    printf("Enter the character to delete: ");
    fgets(symbolToDelete, sizeof(symbolToDelete), stdin);
    symbolToDelete[strcspn(symbolToDelete, "\n")] = 0;

    if (symbolToDelete[0] == '\0') {
        fprintf(stderr, "Error: No character was provided for deletion!\n");
        return -1;
    }

    FILE* inputFile = fopen(inputFileName, "rb");
    if (!inputFile) {
        fprintf(stderr, "Error: Could not open file %s\n", inputFileName);
        return -1;
    }

    FILE* outputFile = fopen(outputFileName, "wb");
    if (!outputFile) {
        fprintf(stderr, "Error: Could not create file %s\n", outputFileName);
        fclose(inputFile);
        return -1;
    }

    // Reading the contents of the source file
    string content;
    char buffer[1024];
    size_t bytesRead;

    while ((bytesRead = fread(buffer, 1, sizeof(buffer), inputFile)) > 0) {
        content.append(buffer, bytesRead);
    }

    fclose(inputFile);

    size_t deletedCount = 0;
    size_t pos = 0;
    string toDelete(symbolToDelete);

    while ((pos = content.find(toDelete, pos)) != string::npos) {
        content.erase(pos, toDelete.length());
        deletedCount++;
    }

    fwrite(content.c_str(), 1, content.size(), outputFile);
    fclose(outputFile);

    printf("Operation completed successfully. Number of deleted characters: %zu\n", deletedCount);

    return 0;
}